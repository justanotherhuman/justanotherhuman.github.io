{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["data","Object","values","require","App","props","state","allCourses","filteredCourses","selectedCourse","selectedLevel","isOpen","setCourse","bind","setLevel","openModal","this","setState","event","selected","currentTarget","value","filter","course","level","Number","classes","courses","Array","from","Set","map","project","levels","className","channel","videoId","onClose","ButtonGroup","variant","color","aria-label","Button","onClick","i","key","Grid","container","spacing","card","item","xs","sm","md","Card","CardMedia","cardMedia","image","CardContent","cardContent","Typography","gutterBottom","component","name","description","CardActions","size","iconButtons","alt","src","rel","target","href","role","Component","withStyles","theme","icon","marginRight","cardGrid","paddingTop","paddingBottom","height","display","flexDirection","flexGrow","float","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ecdd6be4.chunk.js","sourcesContent":["import ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport React, { Component } from \"react\";\nimport \"./App.scss\";\nimport ModalVideo from \"react-modal-video\";\nimport { Button, Card, withStyles } from \"@material-ui/core/\";\n\nconst data = Object.values(require(\"./response.json\"));\nconst styles = (theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  courses: {\n    display: \"flex\",\n  },\n  levels: {\n    float: \"right\",\n  },\n  iconButtons: {\n    width: \"50%\",\n  },\n});\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: data,\n      filteredCourses: data,\n      selectedCourse: \"all\",\n      selectedLevel: \"all\",\n      isOpen: false,\n    };\n    this.setCourse = this.setCourse.bind(this);\n    this.setLevel = this.setLevel.bind(this);\n    this.openModal = this.openModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({ isOpen: true });\n  }\n\n  setCourse(event) {\n    const selected = event.currentTarget.value;\n    this.setState({ selectedCourse: selected });\n\n    if (selected === \"all\") {\n      if (this.state.selectedLevel === \"all\") {\n        this.setState({ filteredCourses: data });\n      } else {\n        this.setState({\n          filteredCourses: data.filter(\n            (course) => course.level === this.state.selectedLevel\n          ),\n        });\n      }\n    } else {\n      if (this.state.selectedLevel === \"all\") {\n        this.setState({\n          filteredCourses: data.filter((course) => course.course === selected),\n        });\n      } else {\n        this.setState({\n          filteredCourses: data.filter(\n            (course) =>\n              course.level === this.state.selectedLevel &&\n              course.course === selected\n          ),\n        });\n      }\n    }\n  }\n\n  setLevel(event) {\n    const selected = event.currentTarget.value;\n    selected === \"all\"\n      ? this.setState({ selectedLevel: \"all\" })\n      : this.setState({ selectedLevel: Number(event.currentTarget.value) });\n\n    if (this.state.selectedCourse === \"all\") {\n      if (selected === \"all\") {\n        this.setState({ filteredCourses: data });\n      } else {\n        this.setState({\n          filteredCourses: data.filter(\n            (course) => course.level === Number(selected)\n          ),\n        });\n      }\n    } else {\n      if (this.state.selectedLevel === \"all\") {\n        this.setState({\n          filteredCourses: data.filter(\n            (course) => course.course === this.state.selectedCourse\n          ),\n        });\n      } else {\n        this.setState({\n          filteredCourses: data.filter(\n            (course) =>\n              course.level === Number(selected) &&\n              course.course === this.state.selectedCourse\n          ),\n        });\n      }\n    }\n  }\n\n  render() {\n\n    const { classes } = this.props;\n    const filteredCourses = this.state.filteredCourses;\n    const courses = Array.from(\n      new Set(this.state.allCourses.map((project) => project.course))\n    );\n    const levels = Array.from(\n      new Set(this.state.allCourses.map((project) => project.level))\n    );\n\n    return (\n      <div className=\"App\">\n        <ModalVideo\n          channel=\"youtube\"\n          isOpen={this.state.isOpen}\n          videoId=\"U9t-slLl30E\"\n          onClose={() => this.setState({ isOpen: false })}\n        />\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n        >\n          <Button onClick={this.setCourse} value=\"all\">\n            all\n          </Button>\n          {courses.map((course, i) => (\n            <Button onClick={this.setCourse} value={course} key={i}>\n              {course}\n            </Button>\n          ))}\n        </ButtonGroup>\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n          className={classes.levels}\n        >\n          <Button onClick={this.setLevel} value=\"all\">\n            all\n          </Button>\n          {levels.map((level, i) => (\n            <Button onClick={this.setLevel} value={level} key={i}>\n              level: {level}\n            </Button>\n          ))}\n        </ButtonGroup>\n\n        <Grid container spacing={4}>\n          {filteredCourses.map((card, i) => (\n            <Grid item key={i} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={card.image}\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {card.name}\n                  </Typography>\n                  <Typography>\n                    {card.description}\n                    <br />\n                    {card.course} - level:{card.level}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"medium\"\n                    color=\"primary\"\n                    onClick={this.openModal}\n                    className={classes.iconButtons}\n                  >\n                    Preview <YouTubeIcon />\n                  </Button>\n                  <Button\n                    size=\"medium\"\n                    color=\"primary\"\n                    onClick={this.openModal}\n                    className={classes.iconButtons}\n                  >\n                    Begin Coding\n                    <CodeIcon />\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n\n        <img\n          alt=\"hw logo\"\n          src=\"https://connect-prd-cdn.unity.com/5bb1242c-7440-409a-8ecf-00638c40a97e\"\n        />\n        <h2>Welcome to the Hello World code challenge!</h2>\n        <p>\n          Here at Hello World, our students learn computer science concepts by\n          completing project based lessons. You will build a project display\n          page during this code challenge.\n        </p>\n        <h3>Objective: </h3>\n        <ul>\n          <li>\n            {\" \"}\n            Fork this repo and build a project list page by fulfilling the user\n            stories below\n          </li>\n          <li>\n            Your page should show a list of course projects returned from this\n            API:{\" \"}\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://hw-challenge-api.firebaseio.com/projects.json\"\n            >\n              https://hw-challenge-api.firebaseio.com/projects.json\n            </a>\n          </li>\n        </ul>\n        <h3>Bonus Points: </h3>\n        <ul>\n          <li>\n            Leverage the{\" \"}\n            <a\n              href=\"https://material-ui.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Material UI\n            </a>{\" \"}\n            component library\n          </li>\n          <li>\n            Test your code using{\" \"}\n            <a\n              href=\"https://testing-library.com/docs/react-testing-library/intro\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              React Testing Library\n            </a>\n          </li>\n          <li>\n            Style your page using{\" \"}\n            <a\n              href=\"https://styled-components.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Styled Components\n            </a>\n          </li>\n        </ul>\n        <h3>User Stories:</h3>\n        <ul>\n          <li>As a student, I can see a list of projects</li>\n          <li>\n            As a student, I can see the title and description of a project\n          </li>\n          <li>As a student, I can view projects by course</li>\n          <li>As a student, I can filter projects by level</li>\n          <li>\n            As a student, I can click on a project to see an intro video and a\n            way to begin the project.\n          </li>\n        </ul>\n        <h3>Rules:</h3>\n        <ul>\n          <li>Fork this repo and structure your files however you see fit.</li>\n          <li>You have 4 hours to complete the challenge.</li>\n          <li>When you are ready to submit, open a PR with your changes.</li>\n          <li>\n            Submit as much as you complete! Just get as much done as you can,\n            and also feel free to submit the project early.\n          </li>\n          <li>\n            As long as you write the code yourself, use any resources or\n            libraries you need.\n          </li>\n          <li>\n            There are no rules about what the UI should look like, as long as it\n            satisfies the user stories above. However, more bonus points are\n            awarded for a nice presentation{\" \"}\n            <span aria-label=\"cool guy emoji\" role=\"img\">\n              😎\n            </span>\n          </li>\n          <li>\n            If you have any questions or problems, please reach out to{\" \"}\n            <a href=\"mailto:ashley@helloworldstudio.org\">\n              ashley@helloworldstudio.org\n            </a>\n          </li>\n        </ul>\n\n        <h3>Good Luck!</h3>\n        <p>- HW Team</p>\n      </div>\n    );\n  }\n}\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}